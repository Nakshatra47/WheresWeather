{"version":3,"sources":["components/Weather.jsx","App.js","index.js"],"names":["i","Weather","useState","query","setQuery","loading","data","error","weather","setWeather","search","event","key","preventDefault","axios","get","params","q","units","appid","then","res","console","log","catch","className","type","placeholder","name","value","onChange","target","onKeyDown","color","height","width","icon","faFrown","style","main","sys","country","currentDate","Date","getDay","getDate","getMonth","toDate","src","alt","description","Math","round","temp","toUpperCase","wind","speed","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":";+TACA,kmGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAwJeC,MAjJf,WACE,MAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAA8BF,mBAAS,CACrCG,SAAS,EACTC,KAAM,GACNC,OAAO,IACP,mBAJKC,EAAO,KAAEC,EAAU,KA+CpBC,EAAM,uCAAG,WAAOC,GAAK,oEACP,UAAdA,EAAMC,IAAe,gBAOvB,OANAD,EAAME,iBACNT,EAAS,IACTK,EAAW,2BAAKD,GAAO,IAAEH,SAAS,KAEtB,kDACC,mCACb,SAEMS,IACHC,IALS,kDAKA,CACRC,OAAQ,CACNC,EAAGd,EACHe,MAAO,SACPC,MARO,sCAWVC,MAAK,SAACC,GACLC,QAAQC,IAAI,MAAOF,GACnBZ,EAAW,CAAEH,KAAMe,EAAIf,KAAMD,SAAS,EAAOE,OAAO,OAErDiB,OAAM,SAACjB,GACNE,EAAW,2BAAKD,GAAO,IAAEF,KAAM,GAAIC,OAAO,KAC1CH,EAAS,IACTkB,QAAQC,IAAI,QAAShB,MACpB,KAAD,sCAEP,gBA5BW,sCA8BZ,OACE,6BACE,wBAAIkB,UAAU,YAAU,cACX,+CAEb,yBAAKA,UAAU,cACb,2BACEC,KAAK,OACLD,UAAU,cACVE,YAAY,gBACZC,KAAK,QACLC,MAAO1B,EACP2B,SAAU,SAACnB,GAAK,OAAKP,EAASO,EAAMoB,OAAOF,QAC3CG,UAAWtB,KAIdF,EAAQH,SACP,oCACE,6BACA,6BACA,kBAAC,IAAK,CAACqB,KAAK,OAAOO,MAAM,QAAQC,OAAQ,IAAKC,MAAO,OAIxD3B,EAAQD,OACP,oCACE,6BACA,6BACA,0BAAMkB,UAAU,iBACd,kBAAC,IAAe,CAACW,KAAMC,MACvB,0BAAMC,MAAO,CAAE,YAAa,SAAS,4BAK1C9B,GAAWA,EAAQF,MAAQE,EAAQF,KAAKiC,MACvC,6BAEE,yBAAKd,UAAU,aACb,4BACGjB,EAAQF,KAAKsB,KAAI,KAAG,8BAAOpB,EAAQF,KAAKkC,IAAIC,WAGjD,yBAAKhB,UAAU,QACb,8BA7GK,WAIb,IAuBMiB,EAAc,IAAIC,KAIxB,MAHU,UAVG,CACX,SACA,SACA,UACA,YACA,WACA,SACA,YAGmBD,EAAYE,UAAS,YAAIF,EAAYG,UAAS,YAxBpD,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,YACA,YAaOH,EAAYI,aAgFNC,KAET,yBAAKtB,UAAU,aACb,yBACEA,UAAU,GACVuB,IAAG,4CAAuCxC,EAAQF,KAAKE,QAAQ,GAAG4B,KAAI,WACtEa,IAAKzC,EAAQF,KAAKE,QAAQ,GAAG0C,cAE9BC,KAAKC,MAAM5C,EAAQF,KAAKiC,KAAKc,MAC9B,yBAAK5B,UAAU,OAAK,UAEtB,yBAAKA,UAAU,YACb,2BAAIjB,EAAQF,KAAKE,QAAQ,GAAG0C,YAAYI,eACxC,0CAAgB9C,EAAQF,KAAKiD,KAAKC,MAAK,WCrIpCC,MARf,WACE,OACE,yBAAKhC,UAAU,OACb,kBAAC,EAAO,QCHdiC,IAASC,OACP,kBAAC,IAAMC,WAAU,KACf,kBAAC,EAAG,OAENC,SAASC,eAAe,W","file":"static/js/main.4312040e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState,useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Rings from 'react-loader-spinner';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFrown } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nfunction Weather() {\r\n  const [query, setQuery] = useState('');\r\n  const [weather, setWeather] = useState({\r\n    loading: false,\r\n    data: {},\r\n    error: false,\r\n  });\r\n//   useEffect( ()=> {const fetchApi = async() => {\r\n//     const url = `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=b7654198eab605d60f8e9a07eed3adec`;\r\n//     const response = await fetch(url);\r\n//     const resJson= await response.json();\r\n//     setWeather({ data: resJson, loading: false, error: false });\r\n//   };\r\n//   fetchApi();\r\n// },[query])\r\n  const toDate = () => {\r\n    // let date = new Date();\r\n    // const today = date.toDateString();\r\n    // return today;\r\n    const months = [\r\n      'January',\r\n      'February',\r\n      'March',\r\n      'April',\r\n      'May',\r\n      'June',\r\n      'July',\r\n      'August',\r\n      'September',\r\n      'October',\r\n      'Nocvember',\r\n      'December',\r\n    ];\r\n    const days = [\r\n      'Sunday',\r\n      'Monday',\r\n      'Tuesday',\r\n      'Wednesday',\r\n      'Thursday',\r\n      'Friday',\r\n      'Saturday',\r\n    ];\r\n    const currentDate = new Date();\r\n    const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\r\n      months[currentDate.getMonth()]\r\n    }`;\r\n    return date;\r\n  };\r\n\r\n  const search = async (event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      setQuery('');\r\n      setWeather({ ...weather, loading: true });\r\n      \r\n      const url = 'https://api.openweathermap.org/data/2.5/weather';\r\n      const apid = 'b7654198eab605d60f8e9a07eed3adec';\r\n      //console.log('Enter');\r\n\r\n      await axios\r\n        .get(url, {\r\n          params: {\r\n            q: query,\r\n            units: 'metric',\r\n            appid: apid,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log('res', res);\r\n          setWeather({ data: res.data, loading: false, error: false });\r\n        })\r\n        .catch((error) => {\r\n          setWeather({ ...weather, data: {}, error: true });\r\n          setQuery('');\r\n          console.log('error', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <h1 className=\"app-name\">\r\n        Weather App<span>ðŸŒ¤</span>\r\n      </h1>\r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city-search\"\r\n          placeholder=\"Search City..\"\r\n          name=\"query\"\r\n          value={query}\r\n          onChange={(event) => setQuery(event.target.value)}\r\n          onKeyDown={search}\r\n        />\r\n      </div>\r\n\r\n      {weather.loading && (\r\n        <>\r\n          <br />\r\n          <br />\r\n          <Rings type=\"Oval\" color=\"black\" height={100} width={100} />\r\n        </>\r\n      )}\r\n      \r\n      {weather.error && (\r\n        <>\r\n          <br />\r\n          <br />\r\n          <span className=\"error-message\">\r\n            <FontAwesomeIcon icon={faFrown} />\r\n            <span style={{ 'font-size': '20px' }}> Sorry, City not found</span>\r\n          </span>\r\n        </>\r\n      )}\r\n\r\n      {weather && weather.data && weather.data.main && (\r\n        <div >\r\n        \r\n          <div className=\"city-name\">\r\n            <h2>\r\n              {weather.data.name}, <span>{weather.data.sys.country}</span>\r\n            </h2>\r\n          </div>\r\n          <div className=\"date\">\r\n            <span>{toDate()}</span>\r\n          </div>\r\n          <div className=\"icon-temp\">\r\n            <img\r\n              className=\"\"\r\n              src={`https://openweathermap.org/img/wn/${weather.data.weather[0].icon}@2x.png`}\r\n              alt={weather.data.weather[0].description}\r\n            />\r\n            {Math.round(weather.data.main.temp)}\r\n            <sup className=\"deg\">&deg;C</sup>\r\n          </div>\r\n          <div className=\"des-wind\">\r\n            <p>{weather.data.weather[0].description.toUpperCase()}</p>\r\n            <p>Wind Speed: {weather.data.wind.speed}m/s</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;","import React from 'react';\nimport './App.css';\nimport Weather from './components/Weather';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Weather />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}